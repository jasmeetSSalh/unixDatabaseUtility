#!/bin/bash

# Load environment variables from .env file if it exists
if [ -f .env ]; then
    export $(grep -v '^#' .env | xargs)
fi

# Check if required environment variables are set
if [ -z "$DB_USERNAME" ] || [ -z "$DB_PASSWORD" ]; then
    echo "Error: DB_USERNAME and DB_PASSWORD must be set"
    echo "Please create a .env file with your credentials or export them as environment variables"
    exit 1
fi

# Optional: Set defaults for host, port, and SID if not provided
DB_HOST="${DB_HOST:-oracle.scs.ryerson.ca}"
DB_PORT="${DB_PORT:-1521}"
DB_SID="${DB_SID:-orcl}"

# Construct connection string
CONNECTION_STRING="${DB_USERNAME}/${DB_PASSWORD}@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(Host=${DB_HOST})(Port=${DB_PORT}))(CONNECT_DATA=(SID=${DB_SID})))"

sqlplus "$CONNECTION_STRING" << EOF

CREATE TABLE HOSPITAL_PERSONNEL 
(
  PERSONNEL_ID NUMBER NOT NULL,
  PERSONNEL_NAME VARCHAR2(50) NOT NULL,
  DEPARTMENT VARCHAR2(50) NOT NULL,
  PERSONNEL_ROLE VARCHAR2(20) NOT NULL,
  ACCESS_LEVEL NUMBER NOT NULL CHECK (ACCESS_LEVEL BETWEEN 1 AND 5),
  CONSTRAINT HOSP_PERSONNEL_PK PRIMARY KEY (PERSONNEL_ID)
);

CREATE TABLE PATIENT_LIST
(
  PATIENT_ID NUMBER NOT NULL,
  PATIENT_NAME VARCHAR2(50) NOT NULL,
  ADMITTED_TIME DATE NOT NULL,
  DIAGNOSIS VARCHAR2(200) NOT NULL,
  DISCHARGE_TIME DATE,
  CONSTRAINT PATIENT_LIST_PK PRIMARY KEY (PATIENT_ID),
  CONSTRAINT CHK_PAT_DISCHARGE CHECK (DISCHARGE_TIME IS NULL OR DISCHARGE_TIME > ADMITTED_TIME)
);

CREATE TABLE HOSP_PERSONNEL_PAT_ASSIGN 
(
  PATIENT_ID NUMBER NOT NULL,
  PERSONNEL_ID NUMBER NOT NULL,
  CONSTRAINT H_PER_PAT_ASSGN_PK PRIMARY KEY (PATIENT_ID, PERSONNEL_ID),
  CONSTRAINT FK_PAT_ASSIGN FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT_LIST(PATIENT_ID),
  CONSTRAINT FK_PER_ASSIGN FOREIGN KEY (PERSONNEL_ID) REFERENCES HOSPITAL_PERSONNEL(PERSONNEL_ID)
);

CREATE TABLE PHARM_MED_INVENTORY
(
  MEDICINE_ID NUMBER NOT NULL,
  DRUG_NAME VARCHAR2(100) NOT NULL,
  DOSAGE VARCHAR2(50) NOT NULL,
  DRUG_DESCRIPTION VARCHAR2(500),
  COMPANY VARCHAR2(100) NOT NULL,
  QUANTITY NUMBER NOT NULL CHECK (QUANTITY >= 0),
  DRUG_TYPE VARCHAR2(50) NOT NULL,
  ACCESS_LEVEL NUMBER NOT NULL CHECK (ACCESS_LEVEL BETWEEN 1 AND 5),
  EXPIRY_DATE DATE NOT NULL,
  DRUG_COST NUMBER(10,2) NOT NULL CHECK (DRUG_COST >= 0),
  CONSTRAINT PHARM_MED_INV_PK PRIMARY KEY (MEDICINE_ID)
);

CREATE TABLE PHARM_SUPPLY_INVENTORY 
(
  SUPPLY_ID NUMBER NOT NULL,
  SUPPLY_NAME VARCHAR2(100) NOT NULL,
  SUPPLY_DESCRIPTION VARCHAR2(500),
  QUANTITY NUMBER NOT NULL CHECK (QUANTITY >= 0),
  SUPPLY_COST NUMBER(10,2) NOT NULL CHECK (SUPPLY_COST >= 0),
  COMPANY VARCHAR2(100) NOT NULL,
  CONSTRAINT PHARM_SUPPLY_INV_PK PRIMARY KEY (SUPPLY_ID)
);

CREATE TABLE HOSP_MED_INVENTORY 
(
  MEDICINE_ID NUMBER NOT NULL,
  QUANTITY NUMBER NOT NULL CHECK (QUANTITY >= 0),
  CONSTRAINT HOSP_MED_INV_PK PRIMARY KEY (MEDICINE_ID),
  CONSTRAINT FK_HOSP_MED FOREIGN KEY (MEDICINE_ID) REFERENCES PHARM_MED_INVENTORY(MEDICINE_ID)
);

CREATE TABLE HOSP_SUPPLY_INVENTORY
(
  SUPPLY_ID NUMBER NOT NULL,
  QUANTITY NUMBER NOT NULL CHECK (QUANTITY >= 0),
  CONSTRAINT HOSP_SUPPLY_INV_PK PRIMARY KEY (SUPPLY_ID),
  CONSTRAINT FK_HOSP_SUPPLY FOREIGN KEY (SUPPLY_ID) REFERENCES PHARM_SUPPLY_INVENTORY(SUPPLY_ID)
);

CREATE TABLE PATIENT_MED_ORDER
(
  ORDER_ID NUMBER NOT NULL,
  PERSONNEL_ID NUMBER NOT NULL,
  PATIENT_ID NUMBER NOT NULL,
  MEDICINE_ID NUMBER NOT NULL,
  QUANTITY NUMBER NOT NULL CHECK (QUANTITY > 0),
  ORDER_DATE DATE NOT NULL,
  RECEIVED_DATE DATE,
  CONSTRAINT PAT_MED_ORD_PK PRIMARY KEY (ORDER_ID),
  CONSTRAINT FK_PAT_MED_PER FOREIGN KEY (PERSONNEL_ID) REFERENCES HOSPITAL_PERSONNEL(PERSONNEL_ID),
  CONSTRAINT FK_PAT_MED_PAT FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT_LIST(PATIENT_ID),
  CONSTRAINT FK_PAT_MED_MED FOREIGN KEY (MEDICINE_ID) REFERENCES PHARM_MED_INVENTORY(MEDICINE_ID),
  CONSTRAINT CHK_PAT_MED_RECV CHECK (RECEIVED_DATE IS NULL OR RECEIVED_DATE >= ORDER_DATE)
);

CREATE TABLE HOSP_MED_ORDER
(
  ORDER_ID NUMBER NOT NULL,
  PERSONNEL_ID NUMBER NOT NULL,
  MEDICINE_ID NUMBER NOT NULL,
  QUANTITY NUMBER NOT NULL CHECK (QUANTITY > 0),
  ORDER_DATE DATE NOT NULL,
  RECEIVED_DATE DATE,
  CONSTRAINT HOSP_MED_ORD_PK PRIMARY KEY (ORDER_ID),
  CONSTRAINT FK_HOSP_MED_PER FOREIGN KEY (PERSONNEL_ID) REFERENCES HOSPITAL_PERSONNEL(PERSONNEL_ID),
  CONSTRAINT FK_HOSP_MED_MED FOREIGN KEY (MEDICINE_ID) REFERENCES PHARM_MED_INVENTORY(MEDICINE_ID),
  CONSTRAINT CHK_HOSP_MED_RECV CHECK (RECEIVED_DATE IS NULL OR RECEIVED_DATE >= ORDER_DATE)
);

CREATE TABLE HOSP_SUPPLY_ORDER 
(
  ORDER_ID NUMBER NOT NULL,
  PERSONNEL_ID NUMBER NOT NULL,
  SUPPLY_ID NUMBER NOT NULL,
  QUANTITY NUMBER NOT NULL CHECK (QUANTITY > 0),
  ORDER_DATE DATE NOT NULL,
  RECEIVED_DATE DATE,
  CONSTRAINT HOSP_SUP_ORD_PK PRIMARY KEY (ORDER_ID),
  CONSTRAINT FK_HOSP_SUP_PER FOREIGN KEY (PERSONNEL_ID) REFERENCES HOSPITAL_PERSONNEL(PERSONNEL_ID),
  CONSTRAINT FK_HOSP_SUP_SUP FOREIGN KEY (SUPPLY_ID) REFERENCES PHARM_SUPPLY_INVENTORY(SUPPLY_ID),
  CONSTRAINT CHK_HOSP_SUP_RECV CHECK (RECEIVED_DATE IS NULL OR RECEIVED_DATE >= ORDER_DATE)
);



exit;
EOF